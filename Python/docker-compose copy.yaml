services:
  pruebas_python:
    container_name: 'Pruebas_Python'
    
    # Otra posibilidad es crearlo en un Dockerfile y luego hacer un build
    # build: './application'
    
    # Si no se crea con build, se puede hacer con image
    image: 'python:3.13.2'  # version 21/03/2025
    
    # Si es necesario asignar puertos
    # ports:
    #  - '5000:5000'
    
    volumes:
      - '/volume1/docker/Python:/usr/python:rw'
        
    # Definir el directorio de trabajo
    working_dir: /usr/python
    
    # Usamos la red del host
    network_mode: host
    
    # Se puede reiniciar siempre o sólo en caso de error
    # restart: always
    restart: on-failure

    # Se pueden definir dependencias entre servicios
    # depends_on:
    #    - database

    # Añadir variables de entorno
    # environment: 
    #    - PORT=8080
    #    - DB_USER=user
    #    - DB_PASS=password
    #   o incluimos en un archivo .env
    #env_file: ./application/.env

    # Comando a ejecutar
    # command: "./lanzador.sh"    
    command: "./lanzador.sh"